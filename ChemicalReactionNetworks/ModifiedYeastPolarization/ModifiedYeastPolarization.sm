// File generated by SBML-to-PRISM converter
// Original file: ModifiedYeastPolarization.xml
// @GeneticLogicLab

ctmc

// Compartment size
const double Cell = 1.0;

// Model local parameters
const double local_kf_0 = 0.0038; // 
const double local_kr_0 = 1.0; // 
const double local_kf_1 = 4.0E-4; // 
const double local_kr_1 = 1.0; // 
const double local_kf_2 = 0.042; // 
const double local_kr_2 = 1.0; // 
const double local_kf_3 = 0.01; // 
const double local_kr_3 = 1.0; // 
const double local_kf_4 = 0.011; // 
const double local_kr_4 = 1.0; // 
const double local_kf_5 = 0.1; // 
const double local_kr_5 = 1.0; // 
const double local_kf_6 = 1050.0; // 
const double local_kr_6 = 1.0; // 
const double local_kf_7 = 3.21; // 
const double local_kr_7 = 1.0; // 

// Species S0
module S0

  S0  :  int init 50;

		// R0
		[R0]  (S0' = S0 + 1);
		// R1
		[R1] S0 > 0 -> (S0' = S0 - 1);
		// R2
		[R2] S0 > 0 & S1 > 0 -> (S0' = S0 - 1);
		// R3
		[R3] S2 > 0 -> (S0' = S0 + 1);

endmodule

// Species S1
module S1

  S1  :  int init 2;

		// R2
		[R2] S0 > 0 & S1 > 0 -> (S1' = S1 + 0);

endmodule

// Species S2
module S2

  S2  :  int init 0;

		// R2
		[R2] S0 > 0 & S1 > 0 -> (S2' = S2 + 1);
		// R3
		[R3] S2 > 0 -> (S2' = S2 - 1);
		// R4
		[R4] S2 > 0 & S3 > 0 -> (S2' = S2 - 1);
		// R7
		[R7]  (S2' = S2 + 1);

endmodule

// Species S3
module S3

  S3  :  int init 50;

		// R4
		[R4] S2 > 0 & S3 > 0 -> (S3' = S3 - 1);
		// R6
		[R6] S5 > 0 & S6 > 0 -> (S3' = S3 + 1);

endmodule

// Species S4
module S4

  S4  :  int init 0;

		// R4
		[R4] S2 > 0 & S3 > 0 -> (S4' = S4 + 1);
		// R5
		[R5] S4 > 0 -> (S4' = S4 - 1);

endmodule

// Species S5
module S5

  S5  :  int init 0;

		// R4
		[R4] S2 > 0 & S3 > 0 -> (S5' = S5 + 1);
		// R6
		[R6] S5 > 0 & S6 > 0 -> (S5' = S5 - 1);

endmodule

// Species S6
module S6

  S6  :  int init 0;

		// R5
		[R5] S4 > 0 -> (S6' = S6 + 1);
		// R6
		[R6] S5 > 0 & S6 > 0 -> (S6' = S6 - 1);

endmodule

// Reaction rates
module reaction_rates

		// R0:  -> S0
		[R0] local_kf_0 > 0 -> local_kf_0 : true;

		// R1: S0 -> 
		[R1] (local_kf_1 * S0) > 0 -> (local_kf_1 * S0) : true;

		// R2: S0 + S1 -> S1 + S2
		[R2] ((local_kf_2 * S0) * S1) > 0 -> ((local_kf_2 * S0) * S1) : true;

		// R3: S2 -> S0
		[R3] (local_kf_3 * S2) > 0 -> (local_kf_3 * S2) : true;

		// R4: S2 + S3 -> S4 + S5
		[R4] ((local_kf_4 * S2) * S3) > 0 -> ((local_kf_4 * S2) * S3) : true;

		// R5: S4 -> S6
		[R5] (local_kf_5 * S4) > 0 -> (local_kf_5 * S4) : true;

		// R6: S5 + S6 -> S3
		[R6] ((local_kf_6 * S5) * S6) > 0 -> ((local_kf_6 * S5) * S6) : true;

		// R7:  -> S2
		[R7] local_kf_7 > 0 -> local_kf_7 : true;

endmodule

// Reward structures (one per species)
// Reward 1: S0
rewards "S0" true : S0; endrewards
// Reward 2: S1
rewards "S1" true : S1; endrewards
// Reward 3: S2
rewards "S2" true : S2; endrewards
// Reward 4: S3
rewards "S3" true : S3; endrewards
// Reward 5: S4
rewards "S4" true : S4; endrewards
// Reward 6: S5
rewards "S5" true : S5; endrewards
// Reward 7: S6
rewards "S6" true : S6; endrewards
